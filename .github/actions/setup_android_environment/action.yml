name: "Setup Android Environment"
description: "Setup the Android environment for CI/CD pipeline."
inputs:
  use_shorebird:
    description: "Whether to setup Shorebird."
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: "Environment: SSH Key"
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ env.ssh_key }}
    # - name: "Environment: Java"
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: "17"
    #     distribution: "adopt"
    # - name: "Environment: Ruby"
    #   # NOTE: Do not run this step on macOS. This version of Ruby may conflict with CocoaPods.
    #   if: ${{ runner.os != 'macOS' }}
    #   uses: ruby/setup-ruby@v1
    #   with:
    #     ruby-version: "3.2.5"
    # - name: "Environment: Flutter"
    #   if: ${{ inputs.use_shorebird != 'true' }}
    #   uses: subosito/flutter-action@v2
    #   with:
    #     flutter-version: ${{ env.flutter_version }}
    #     channel: "stable"
    # - name: "Environment: Shorebird"
    #   if: ${{ inputs.use_shorebird == 'true' }}
    #   uses: shorebirdtech/setup-shorebird@v1
    # - name: "Environment: Keystore"
    #   run: |
    #     echo ${{ env.play_store_upload_key_base64 }} | base64 --decode > "app/keystore.jks"
    #     keytool -list -v -keystore "app/keystore.jks" -storepass ${{ env.keystore_store_password }}
    #     echo "storeFile=keystore.jks" >> key.properties
    #     echo "keyAlias=${{ env.keystore_key_alias }}" >> key.properties
    #     echo "keyPassword=${{ env.keystore_key_password }}" >> key.properties
    #     echo "storePassword=${{ env.keystore_store_password }}" >> key.properties
    #   shell: bash
    #   working-directory: android
    # - name: "Get Flutter Dependencies"
    #   if: ${{ inputs.use_shorebird != 'true' }}
    #   shell: bash
    #   run: flutter pub get
    - name: "Environment: Fastlane"
      run: |
        gem install fastlane
        echo "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAidHVuZWluc3RhLWFpIiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiNzE4M2JmYzk0YmU4YzdjZDdmMzBmMjM4Yjk4YWU4YjNhM2QzZTA0NCIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZBSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS1l3Z2dTaUFnRUFBb0lCQVFDMmVwS2F3L2kzWTZBRlxubEMxa3pHamVrdWwvbHIrL1BTemFuTXRIL2FJazJBNUNFRUhGSmxQY292dXNQUFFtMzhLa095OXNUNCsxOS83Q1xuQmFhMWE4SWx5THZON0VMaWp0OUZjR0krWnNueTdaOVVTb0Y1ZzZtOEJJU2RJcmQrN1kxQklXeGpUQllYcXc2M1xud01Jek40V29kbWxKZTZEWHppQTloRmRxVXhZbVZ4ekQzN254aVNWaVoyMlNPRTBjUHFvaEsrYldXN0lWQnM1SlxuOUV2YUpKTkpBS2VXWVFlRkpvV0pPbGE2ZkdodktXWDBjSDJjN1Rtc2F6R2tlVVpYaWNoTkROb0FSRUc4Zm1aNVxudlVWZkRhUkJyL3hyL0FUZXkyWURLcFlITUo2dE80aFA4cXhqaG9OYUVSUjh5ZUFjUzVIcmZyaWZaVTFOODRFVFxueTVmbTZlOFpBZ01CQUFFQ2dnRUFIZndjTlFRNHpXRzRmTkl4ZDF2RGE3ZDJXUG5iZmtBK0s1b1NLVDA3TkpTd1xuR3hqeXhjT2JpaWpaOUI1Ny9CdE9yNC91SmYwWTMwemw5dG5ZMy96YUJUMXI1dFdJMUJPb0NwQUNCTUQ5TkVicFxucEg4dHNWcjZQQ1A5NnBnMjBNdVdKM3FuaGRXTjE4dksrbFRaVkhNdUtsVnl6WmxiLzdvbVFCV01DN09sY3gwY1xuT0NqVWc3YmMwcG9zM2ZEcmxyMjBXcjVmLzE1RXRidjFkRkw2R0NualVxQXJmdDRjK1lJVkFybCtPbkRWMTRWRlxuNFY2QmtkMCtiTUNrbTNlMWdOcDFwb0NVZndlRzRpSTRkSVp6UEtkWUJ4V0hjb0tOMzIzWCtqRFRqNFFFZGExcVxubUVUNCtta0FONUlYM2RjZGNaWU1PVkljRExoUXVpKzZKdjlvTlVJUjBRS0JnUURtRzJCTXhiOU4rZVR6ejhpMFxuQkovcjFLMmpsc216eVhkb25aclFKVnJQeTYzTUl0VkwwOGhvK1F1alcvbyt6cS9CczdrUHRxR1BiaTc1V0ltT1xuTTRzZXZiU1VnTk5kSHpXeDZKd2E0aVRCUTNKUEdqNm9ZbkcxaytkN1hPQncxVEFENlp2c0VYYkFBSHVvN2ZhelxudXVVSUpsN3BRSXRFQXdpeisvK3ZRMFVjblFLQmdRRExBeS9BSzNKWkVyZC82ZWNFQUxKc201YkJBZ3JNNjdnMVxuaDBGTUZuR1UrcnVSMmovNXkwMHNjb3oxSDdtcDBnbHp5bEsxaEFER3l4VVZMczdxS3N0ZjBmN3Z3d0FTejdPcVxuUVlVRGhmUDQxRkZZK2J4bXUxcE1NQUo1WTJsYXFVbmRVSFNJRjBBVGx5VkhDN2tjMFNRSFgwY0FUQlpEaForQlxuNHBUbFJZWXRyUUtCZ0Ewd0RIalo3SGpmbFl1VG9RRVFNc29sU2o1UjZnVnZ5blFvZERMeHNSNnZvYXBOWk1RUFxud3pDZzlWWExjN0FkMEZ6ZG5BR1dpZlBhY0w3Qm9FQ1NHNnNMWEVvV2lBYVNQMVdPNjBOdktvUVpCWGdiSFBReFxua0NyRDYwUmFzbEpGSlpkVDBDZmJhRjdncURXcVRiVkhSTkVPd2VuRVZUYjBwWThMSmtBNUxzRFJBb0dBRnI4SlxucDU5MmxYSmFheE9iRmNDNlBSOEZ1aVJ2YjF4dDdGbDJRSDgzUkxqL01TMWlBNnY2dnFNckZmL3kvb3NSRWc4MlxuU3k0NkpBdjNGY09EM1lyajlKMkQwZnRvVTdNLzd6Q2VKYkhwanhUQzlKUXV2dGY1R3hZNkFMM1p2UlhBdC9KZVxuekN6R3Vpc3lPdzZlTkJOZTFSQ2cxUEN4Z2VsRDRQcXhNaXNqQ0pVQ2dZQnMvM3U2SHNiYWg2TWZkTXJCYmpuVVxuZDZNb1daSmpNdEhKVmR4Y3ZKTUlNeHJGbXI1Q3JkdGtqUW1PdkpIRHVtTUdFbnEvcEhERjRoSkVLVVhoeXdXZlxuMXJMT0FsYXdLa25xVkZVQkJPdHdiK1VEWkE3Mkt0d1A2Qmtmb0diSVlNemVhS1VwU1hvV1lHVEcxQmJPNFc2Q1xuRTRXUHgyN0paSVdvVjltNUhwRkxEdz09XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAidHVuZWluc3RhLWFpQGFwcHNwb3QuZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgImNsaWVudF9pZCI6ICIxMDI3MTI5MzkxNDQxNjY3MjA0ODQiLAogICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L3R1bmVpbnN0YS1haSU0MGFwcHNwb3QuZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgInVuaXZlcnNlX2RvbWFpbiI6ICJnb29nbGVhcGlzLmNvbSIKfQo=" | base64 --decode > "fastlane/service_key.json"
        echo "json_key_file(\"fastlane/service_key.json\")" >> fastlane/Appfile
      shell: bash
      working-directory: android
